# SPACE ###############################################################
space.is_periodic = 0 0 0
#space.is_periodic = 1 1 1
space.lo          = 0.0 0.0 0.0
space.hi          = 1.0 1.0 1.0
#######################################################################



# TIME ################################################################
time.T = 1.0
time.n_steps = 10000
#######################################################################



# DISCRETIZATION ######################################################
# GRID ================================================================
grid.n_cells      = 8 8 8
grid.max_box_size = 4 4 4
grid.CFL = 0.3

# LEVEL SET FUNCTIONS
grid.space_p = 2
grid.space_q = 3
# =====================================================================
# NOTE: CFL = 0.6 for DIM = 2 and CFL = 0.3 for DIM = 3
#
#       Also, remember that the CFL will be scaled as follows:
#
#       CFL := CFL/(1+2*p)
#
#       where p is the order of the dG basis functions (see below).
# =====================================================================

# IMPLICITLY-DEFINED MESH =============================================
implicit_mesh.space_q = 4
implicit_mesh.space_q_ie = 6

implicit_mesh.volume_fraction_threshold = 0.3
# =====================================================================

# DISCONTINUOUS GALERKIN METHOD =======================================
dG.space_p = 1
# =====================================================================
# NOTE: Although the polynomial order p is set here, the code will test
#       p = 1, 2, 3.
# =====================================================================
#######################################################################



# PROBLEM #############################################################
# NO EMBEDDED GEOMETRY
#problem.int_params = 0 -1
#problem.params = 1.0 1.0 0.3

# EMBEDDED CIRCLE/SPHERE
problem.int_params = 0 0
#problem.params = 1.0 1.0 0.3 0.2 0.5 0.5 0.5 # in 2D
problem.params = 1.0 1.0 0.3 0.4 0.5 0.5 0.5 # in 3D
#######################################################################
# NOTE: int_params and params contains the parameters of the problem,
#       which should be input as follows
#
#       int_params: mat_type geo_info
#       params: mat_constants geo_constants
#
#       where:
#       - mat_type: flag that identified the material type
#                   0: isotropic
#                   1: orthotropic
#
#       - geo_info: flag that identifies the embedded geometry
#                   -1: no embedded geometry
#                   0: circle (in 2D) or sphere (in 3D)
#
#       - mat_constants: elastic constants of the material; they depend
#                        on the mat_type flag:
#
#                        if mat_type == 0 then
#                        mat_constants: rho E nu
#
#                        if mat_type == 1 then
#                        mat_constants: rho E1 E2 nu12 G12 (in 2D)
#                        or 
#                        mat_constants: rho E1 E2 E3 nu23 nu13 nu12 G23 G13 G12 (in 3D)
#
#       - geo_constants: constants of the geometry; they depend on the
#                        geo_info flag:
#
#                        if geo_info == -1 then
#                        geo_constants:
#
#                        if geo_info == 0 then
#                        geo_constants: r c1 c2 (in 2D)
#                        or
#                        geo_constants: r c1 c2 c3 (in 3D)
#
#######################################################################



# POST-PROCESSING INFO ################################################
plot_int = 10000
#######################################################################