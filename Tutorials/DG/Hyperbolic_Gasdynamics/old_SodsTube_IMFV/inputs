# SPACE ###############################################################
space.is_periodic = 0 0 0
space.lo          = 0.0 0.0 0.0
space.hi          = 1.0 1.0 1.0
#######################################################################



# TIME ################################################################
time.T = 0.2
time.n_steps = 10000
#######################################################################



# DISCRETIZATION ######################################################
# GRID ================================================================
grid.n_cells      = 64 64 64
grid.max_box_size = 4 4 4
grid.CFL = 0.3
# =====================================================================


# IMPLICITLY-DEFINED MESH =============================================
grid.space_p = 2
grid.space_q = 2
grid.space_q_im = 3

grid.volume_fraction_threshold = 0.3
# =====================================================================
# NOTE: In 2D
#
#       grid.volume_fraction_threshold = 0.3
#
#       while in 3D
#
#       grid.volume_fraction_threshold = 0.1
# =====================================================================


# DISCONTINUOUS GALERKIN METHOD =======================================
dG.space_p = 0
# =====================================================================
# NOTE: In order to activate finite volumes with the implicitly-defined
#       mesh, it is necessary to specify: dG.space_p = 0.
# =====================================================================
#######################################################################



# PROBLEM #############################################################
problem.params = 10.0 0.0 10.0 0.0 0.125 0.0 0.1 0.20 0.0 45.0
#######################################################################
# NOTE: params contains the left_state and right_state, which should be
#       input as follows:
#
#       rhoL, uL, pL, xis, rhoR, uR, pR, diam, theta, phi
#
#       where:
#       - (rhoL, uL, pL) is the left state;
#       - xis is the shock location;
#       - (rhoR, uR, pR) is the right state;
#       - diam is the diameter of the tube;
#       - theta is the inclination (or azimuth in 3D) of the tube;
#       - phi is the elevation of the tube (used in 3D only);
#
#       Theta and phi must be input in degrees.
#
#       The geometry of the tube is defined as follows: given the
#       [0,1]^AMREX_SPACEDIM container C, the tube is the set of points
#       of C such that the distance between the generic point x and the
#       centerline of the tube is less than the tube's radius r, where
#       r = diam/2. The centerline of the tube is defined by the
#       points:
#
#       x = 0.5+s*xi
#
#       where s is a parameter going from -inf to +inf, and xi is the
#       unit vector denoting the direction of the tube. In 2D
#
#       xi = {cos(theta), sin(theta)}
#
#       while in 3D
#
#       xi = {cos(theta)*cos(phi), sin(theta)*cos(phi), sin(phi)}
#
#######################################################################



# POST-PROCESSING INFO ################################################
plot_int = 1
#######################################################################