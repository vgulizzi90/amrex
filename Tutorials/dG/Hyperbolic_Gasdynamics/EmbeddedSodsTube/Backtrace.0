=== If no file names and line numbers are shown below, one can run
            addr2line -Cpfie my_exefile my_line_address
    to convert `my_line_address` (e.g., 0x4a6b) into file name and line number.
    Or one can use amrex/Tools/Backtrace/parse_bt.py.

=== Please note that the line number reported by addr2line may not be accurate.
    One can use
            readelf -wl my_exefile | grep my_line_address'
    to find out the offset for that line.

 0: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x6a011e]
    amrex::BLBackTrace::print_backtrace_info(_IO_FILE*) at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/../../../..//Src/Base/AMReX_BLBackTrace.cpp:175

 1: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x69fba2]
    amrex::BLBackTrace::handler(int) at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/../../../..//Src/Base/AMReX_BLBackTrace.cpp:85

 2: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x537ca5]
    amrex::ParallelDescriptor::Abort(int, bool) at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/../../../..//Src/Base/AMReX_ParallelDescriptor.cpp:206

 3: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x4e8645]
    amrex::Assert_host(char const*, char const*, int, char const*) at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/../../../..//Src/Base/AMReX.cpp:314

 4: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x43b333]
    amrex::FabArray<amrex::BaseFab<long> >::fabPtr(amrex::MFIter const&) const at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/../../../..//Src/Base/AMReX_FabArray.H:1042

 5: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x42bc12]
    amrex::Array4<long const> amrex::FabArray<amrex::BaseFab<long> >::array<amrex::BaseFab<long>, 0>(amrex::MFIter const&) const at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/../../../..//Src/Base/AMReX_FabArray.H:1094

 6: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x46237b]
    void amrex::dG::amr_utils::restrict<EmbeddedSodsTube::IBVP>(amrex::Geometry const&, amrex::dG::Solution const&, amrex::MultiFab const&, amrex::IntVect, amrex::Geometry const&, amrex::dG::Solution const&, amrex::MultiFab&, EmbeddedSodsTube::IBVP const&, bool) at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/../../../..//Src/dG/AMReX_dG_AMR.H:440 (discriminator 2)

 7: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x44e9d5]
    void amrex::dG::hyperbolic_pde::take_time_step_using_explicit_RKdG<EmbeddedSodsTube::IBVP>(amrex::dG::amr::SinglePatch const&, double, double, amrex::Vector<amrex::MultiFab, std::allocator<amrex::MultiFab> >&, EmbeddedSodsTube::IBVP const&) at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/../../../..//Src/dG/AMReX_dG_AMR_Utils.H:504

 8: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x4379aa]
    void amrex::dG::hyperbolic_pde::take_time_step<EmbeddedSodsTube::IBVP>(amrex::dG::amr::SinglePatch const&, double, double, amrex::Vector<amrex::MultiFab, std::allocator<amrex::MultiFab> >&, EmbeddedSodsTube::IBVP const&) at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/../../../..//Src/dG/AMReX_dG_AMR_Utils.H:534

 9: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x429564]
    EmbeddedSodsTube::AMR::take_time_step(double, double) at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/IBVP_EmbeddedSodsTube.H:835

10: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x41d1ba]
    main_main() at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/main.cpp:143

11: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x41db45]
    main at /home/vgulizzi/RACE/Projects/2021/amrex/Tutorials/dG/Hyperbolic_Gasdynamics/EmbeddedSodsTube/main.cpp:195

12: /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0) [0x7f7d3415a840]

13: ./main2d.gnu.DEBUG.TPROF.MPI.ex() [0x409079]
    _start at ??:?


===== TinyProfilers ======
amrex::dG::amr_utils::restrict(...)

